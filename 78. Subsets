// total number of subsets = 2^nums.length
// to find total number of subsequences first we have to include that number in recurtion and anthoer step we do't have to include that number in recurtion
class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> carrier = new ArrayList<>();
        genarateSubsequences(nums, ans, carrier, 0);
        return ans;
    }
    public void genarateSubsequences(int[] arr, List<List<Integer>> ans, List<Integer> carrier, int idx){
        if(idx == arr.length){
				ans.add(new ArrayList<>(carrier));
			return;
		}else{
			genarateSubsequences(arr, ans, carrier, idx + 1);
			carrier.add(arr[idx]);
			genarateSubsequences(arr, ans, carrier, idx + 1);
			carrier.remove(carrier.size() - 1);
		}
    }
}
